[{"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\index.js":"1","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\reportWebVitals.js":"2","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\App.js":"3","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\index.js":"4","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\index.js":"5","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\styles.js":"6","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\services\\api.js":"7","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\index.js":"8","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\index.js":"9","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\styles.js":"10","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\styles.js":"11","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\index.js":"12","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\styles.js":"13","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\auth.routes.js":"14","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\infra.routes.js":"15","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\colaborador.routes.js":"16","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\index.js":"17","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\contexts\\user.js":"18","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\index.js":"19","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\styles.js":"20","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\index.js":"21","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\styles.js":"22","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\styles.js":"23","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\GeraTermoResponsabilidade\\index.js":"24","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\NotFound\\index.js":"25"},{"size":463,"mtime":1610396101936,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":258,"mtime":1610999926444,"results":"29","hashOfConfig":"27"},{"size":1196,"mtime":1610896110789,"results":"30","hashOfConfig":"27"},{"size":7716,"mtime":1611001601899,"results":"31","hashOfConfig":"27"},{"size":3308,"mtime":1610953038495,"results":"32","hashOfConfig":"27"},{"size":141,"mtime":1610987862798,"results":"33","hashOfConfig":"27"},{"size":13731,"mtime":1611002920720,"results":"34","hashOfConfig":"27"},{"size":1515,"mtime":1611000585131,"results":"35","hashOfConfig":"27"},{"size":1180,"mtime":1610979258530,"results":"36","hashOfConfig":"27"},{"size":1414,"mtime":1610956421155,"results":"37","hashOfConfig":"27"},{"size":8061,"mtime":1611001572260,"results":"38","hashOfConfig":"27"},{"size":1971,"mtime":1610982466333,"results":"39","hashOfConfig":"27"},{"size":144,"mtime":1610895250209,"results":"40","hashOfConfig":"27"},{"size":784,"mtime":1611081923049,"results":"41","hashOfConfig":"27"},{"size":485,"mtime":1611082102480,"results":"42","hashOfConfig":"27"},{"size":3745,"mtime":1611001504323,"results":"43","hashOfConfig":"27"},{"size":1427,"mtime":1611000016549,"results":"44","hashOfConfig":"27"},{"size":1532,"mtime":1611082730457,"results":"45","hashOfConfig":"27"},{"size":768,"mtime":1610999576821,"results":"46","hashOfConfig":"27"},{"size":8660,"mtime":1611001943884,"results":"47","hashOfConfig":"27"},{"size":2389,"mtime":1610959590110,"results":"48","hashOfConfig":"27"},{"size":2040,"mtime":1610944683607,"results":"49","hashOfConfig":"27"},{"size":1926,"mtime":1610999945422,"results":"50","hashOfConfig":"27"},{"size":157,"mtime":1611082125299,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"26n622",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\index.js",[],["106","107"],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\reportWebVitals.js",[],["108","109"],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\App.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\services\\api.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\index.js",["110","111","112"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport {TextField, Backdrop, Fade, MenuItem} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport api from '../../services/api';\r\nimport {ModalS, Paper, ButtonAdd, ButtonDelete, Button, ButtonOutline} from './styles'\r\nimport { UsuarioContext } from '../../contexts/user';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function ModalSolicitacao({handleClose, open}){\r\n    const [campos, setCampos] = useState([{ value: null }]);\r\n    const [todosUsuarios, setTodosUsuarios] = useState([]);\r\n    const [codigoSolicitacao, setCodigoSolicitacao] = useState('');\r\n    const [solicitante, setSolicitante] = useState();\r\n    const [listaEquipamentos, setListaEquipamentos] = useState([]);\r\n    const [listaDiasReservados, setListaDiasReservados] = useState([]);\r\n    const [equipamentoByCategoria, setEquipamentoByCategoria] = useState();\r\n    const [situacao, setSituacao] = useState('');\r\n    const [data, setData] = useState('');\r\n    const [hora, setHora] = useState('');\r\n    const [horaLivre, setHoraLivre] = useState(true);\r\n    const { user } = useContext(UsuarioContext);\r\n\r\n    const alert = (mensagem, tipo) => {\r\n        toast(\r\n            mensagem,\r\n            {type: tipo}\r\n        );\r\n    }\r\n\r\n    const listaHorarios = [\r\n        \"09:00\",\r\n        \"10:00\",\r\n        \"11:00\",\r\n        \"13:00\",\r\n        \"14:00\",\r\n        \"15:00\",\r\n        \"16:00\",\r\n        \"17:00\"\r\n    ]\r\n\r\n    const listaCategorias = [\r\n        'Monitor',\r\n        'Cadeira',\r\n        'Teclado',\r\n        'Mouse',\r\n        'Desktop',\r\n        'Laptop',\r\n        'Adaptador Hdmi',\r\n        'Cabo Displayport',\r\n        'Mesa'\r\n    ]\r\n\r\n    const handleAdicionaInput = () => {\r\n        const quantidade = [...campos];\r\n        quantidade.push({ value: null });\r\n        setCampos(quantidade);\r\n    }\r\n  \r\n    const handleRemoveInput = (i, equipamento) => {\r\n        const quantidade = [...campos];\r\n        quantidade.splice(i, 1);\r\n        setCampos(quantidade);\r\n        let name = equipamento;\r\n        setListaEquipamentos(listaEquipamentos.filter((equipamento)=>(equipamento !== name)));\r\n    }\r\n    \r\n    const handleSolicitacao = async (e) => {\r\n        e.preventDefault();\r\n\r\n        loadSolicitacaoByDataHora(data, hora);\r\n\r\n        if(user.admin === false) {\r\n            setSolicitante(user.idUsuario);\r\n            setSituacao('ANALISE');\r\n        } else {\r\n            setSituacao('AGENDADA');\r\n        }\r\n        \r\n        const params = { \r\n            solicitante: parseInt(solicitante),\r\n            situacao: situacao,\r\n            equipamentos: listaEquipamentos,\r\n            data: data,\r\n            hora: hora,\r\n            codigoSolicitacao: codigoSolicitacao\r\n        }\r\n        console.log(params);\r\n        \r\n        if (solicitante !== parseInt(solicitante)){\r\n            alert(\"Adicione um solicitante\", \"warning\")\r\n            return console.log(user);\r\n        }\r\n        if (horaLivre === false){\r\n            alert(\"Esse horário já está marcado\", \"warning\")\r\n            return\r\n        }\r\n        if (listaEquipamentos.length === 0){\r\n            alert(\"Adicione um equipamento\", \"warning\")\r\n            return \r\n        }\r\n\r\n        try {\r\n            await api.post('solicitacao', params);\r\n            mapSetEquipamentoIndisponivel(listaEquipamentos);\r\n        } catch {\r\n            alert(\"Não foi possível efetuar a solicitação\", \"error\");\r\n        } finally {\r\n            setSolicitante('');\r\n            setData('');\r\n            setHora('');\r\n            setListaEquipamentos([]);\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    const loadDiasReservados = async () => {\r\n        try{\r\n            const response = await api.get('diaReservado');\r\n            setListaDiasReservados(response.data);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const setEquipamentoIndisponivel = (equipamento) => {\r\n        api.put(`equipamento/setIndisponivel/${equipamento.idEquipamento}`)\r\n        return Promise.resolve('ok')\r\n    }\r\n      \r\n    const asyncSetEquipamentoIndisponivel = async (equipamento) => {\r\n        return setEquipamentoIndisponivel(equipamento)\r\n    }\r\n      \r\n    const mapSetEquipamentoIndisponivel = async (lista) => {\r\n        return Promise.all(lista.map(equipamento=> asyncSetEquipamentoIndisponivel(equipamento)))\r\n    }\r\n\r\n    const verificaDiaReservado = (dataEscolhida) => {\r\n        let isReservado = false;\r\n        loadDiasReservados();\r\n\r\n        listaDiasReservados.map(diaReservado => {\r\n            if (diaReservado.data === dataEscolhida) {\r\n                isReservado = true;\r\n            } \r\n        })  \r\n        return isReservado; \r\n    }\r\n\r\n    const loadSolicitacaoByDataHora = async (dataEscolhida, horaEscolhida)  => {\r\n        try {\r\n            const response = await api.get(`solicitacao/dataHora/${dataEscolhida}/${horaEscolhida}`);\r\n            setHoraLivre(false);\r\n            if(response.data === \"\"){\r\n                setHoraLivre(true);\r\n            } else {\r\n                alert(\"Esse horário já está marcado\", \"warning\");\r\n            }\r\n        } catch {\r\n            alert(\"Não foi possível verificar a hora solicitada\", \"error\")\r\n        }\r\n    }\r\n\r\n    const verificaData = (dataEscolhida) => {\r\n        loadDiasReservados();\r\n        if (dataEscolhida > getDataHoje() & verificaDiaReservado(dataEscolhida) === false) {\r\n            setData(dataEscolhida);\r\n        } else {\r\n            alert(\"Não é possível fazer um agendamento nesta data\", \"warning\");\r\n            setData(''); \r\n        }\r\n    }\r\n    \r\n    const getDataHoje = () => {\r\n        return new Date().toISOString().slice(0, 10);\r\n    }\r\n\r\n    const loadUsuarios = async () => {\r\n        try{\r\n            const response = await api.get('usuario');\r\n            setTodosUsuarios(response.data);\r\n        }catch {\r\n            alert(\"Erro ao carregar as informações\", \"error\");\r\n        }\r\n    }\r\n\r\n    const loadEquipamentoByCategoria = async (categoria) => {\r\n        \r\n        try{\r\n            const response = await api.get(`equipamento/categoria/${formataParaEnum(categoria)}`);\r\n            setListaEquipamentos(a => [...a, (response.data)]);\r\n            setEquipamentoByCategoria(response.data);\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Equipamento do tipo \"+categoria+\" em falta\", \"warning\")\r\n        }\r\n    }\r\n\r\n    const formataParaEnum = (item) => {\r\n        const semEspacos = item.replace(\" \",\"_\");\r\n        return semEspacos.toUpperCase();\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            loadUsuarios();\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <ModalS\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Paper>\r\n                        <Grid\r\n                            direction=\"row\"\r\n                            container\r\n                        >\r\n                        <TextField\r\n                            id=\"outlined-date\"\r\n                            label=\"Data\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            style={{ marginRight: 17, marginBottom: 15}}\r\n                            value={data}\r\n                            onChange={e => \r\n                                {verificaData(e.target.value)\r\n                            }}\r\n                         >\r\n                        </TextField>\r\n\r\n                        {/* <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Código da Solicitação\"\r\n                            placeholder=\"Placeholder\"\r\n                            required\r\n                            multiline\r\n                            style={{width: \"190px\", marginLeft: 17, marginBottom: 15}}\r\n                            variant=\"outlined\"\r\n                            value={codigoSolicitacao}\r\n                            onChange={e => \r\n                                {setCodigoSolicitacao(e.target.value)\r\n                            }}\r\n                         >\r\n                        </TextField> */}\r\n                        {user.admin &&\r\n                            <Autocomplete\r\n                                id=\"combo-box-demo\"\r\n                                required\r\n                                onChange={(event, newValue) => {\r\n                                    newValue !== null && setSolicitante(newValue.idUsuario)\r\n                                }}\r\n                                options={todosUsuarios}\r\n                                getOptionLabel={(usuario) => usuario.login}\r\n                                style={{ width: 300 }}\r\n                                renderInput={(params) => \r\n                                    <TextField \r\n                                        variant=\"outlined\" \r\n                                        required \r\n                                        style={{width: \"280px\", marginBottom: 15}} \r\n                                        {...params} \r\n                                        label=\"Solicitante\"\r\n                                        />\r\n                                }\r\n                            />\r\n                        }\r\n                        \r\n                        <TextField\r\n                            select\r\n                            required\r\n                            style={{width: \"100px\", marginBottom: 15}}\r\n                            variant=\"outlined\"\r\n                            id=\"standard-select-currency-native\"\r\n                            label=\"Hora\"\r\n                            value={hora}\r\n                            onChange={e => \r\n                                {setHora(e.target.value)\r\n                            }}\r\n                        >  \r\n                            {\r\n                                listaHorarios.map(horario => (\r\n                                    <MenuItem key={horario} value={horario}>{horario}</MenuItem>\r\n                                ))\r\n                            }\r\n                        </TextField>\r\n                        </Grid>\r\n\r\n                        {campos.map((campo, index) => {\r\n                            return (\r\n                            <div key={`${campo}-${index}`}>\r\n                                <TextField\r\n                                    id=\"outlined-textarea\"\r\n                                    style={{width: \"150px\", marginBottom: 15}}\r\n                                    label=\"Equipamento\"\r\n                                    select\r\n                                    placeholder=\"Placeholder\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    onChange={e => \r\n                                        {loadEquipamentoByCategoria(e.target.value)}}\r\n                                >{\r\n                                    listaCategorias.map(categoria => (\r\n                                        <MenuItem  \r\n                                            key={categoria}\r\n                                            value={categoria}\r\n                                        >\r\n                                            {categoria}\r\n                                        </MenuItem>\r\n                                    ))                                \r\n                                }\r\n                                </TextField>\r\n                                <ButtonDelete \r\n                                    type=\"button\" \r\n                                    onClick={() => handleRemoveInput(index, equipamentoByCategoria)}>\r\n                                x\r\n                                </ButtonDelete>\r\n                            </div>\r\n                            );\r\n                        })}\r\n\r\n                        <ButtonAdd\r\n                            type=\"button\" \r\n                            onClick={() => handleAdicionaInput()}\r\n                        >\r\n                            Adicionar equipamento\r\n                        </ButtonAdd>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            style={{ alignItems: \"center\", justifyContent: \"center\"}}\r\n                        >\r\n                            <Button\r\n                                onClick={e => handleSolicitacao(e)}\r\n                            >\r\n                                Adicionar\r\n                            </Button>\r\n                            <ButtonOutline\r\n                                onClick={handleClose}\r\n                            >\r\n                                Cancelar\r\n                            </ButtonOutline>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Fade>\r\n            </ModalS>\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\auth.routes.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\infra.routes.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\colaborador.routes.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\index.js",["113"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { UsuarioContext } from '../../contexts/user';\r\nimport api from '../../services/api';\r\nimport Logo from '../../assets/logo_branca.svg';\r\nimport Banner from '../../assets/equipamentos.png';\r\nimport ModalSolicitacao from '../../components/ModalSolicitacao';\r\nimport {BannerContainer, \r\n        Button,\r\n        Header, \r\n        SolicitacoesColumn, \r\n        Row, \r\n        SolicitacaoContainer, \r\n        TituloSituacao, \r\n        Column, \r\n        InformacaoRow, \r\n        Container, \r\n        ButtonOutline\r\n} from './styles';\r\n\r\n\r\n\r\nexport default function Colaborador() {\r\n    const [open, setOpen] = useState(false);\r\n    const [listaSolicitacoes, setListaSolicitacoes] = useState([]);\r\n    const { user, signOut } = useContext(UsuarioContext);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const loadSolicitacoes = async() => {\r\n        try{\r\n            const response = await api.get(`solicitacao/solicitante/${user.idUsuario}`); \r\n            setListaSolicitacoes(response.data);\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n\r\n    const formataDeEnum = (string) => {\r\n        return string.replace(/\\S*/g,  (word) => {\r\n            return word.charAt(0) + word.slice(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            loadSolicitacoes();\r\n        }, []\r\n    )\r\n\r\n    return(\r\n        <Container>\r\n            <Header\r\n                direction=\"row\"\r\n                container\r\n            >\r\n                <img alt=\"Logo da Alterdata\" style={{width: \"22vw\"}} src={Logo}/>\r\n                <ButtonOutline onClick={()=> signOut()}>\r\n                    SAIR\r\n                </ButtonOutline>\r\n            </Header>\r\n            \r\n            <Row\r\n                direction=\"row\"\r\n                container\r\n            >\r\n                <BannerContainer>\r\n                    <img alt=\"Banner de solicitação\" style={{height: \"62vh\" }} src={Banner}/>\r\n                </BannerContainer>\r\n                <Column>\r\n                    <TituloSituacao> Suas Solicitações </TituloSituacao>\r\n                    <SolicitacoesColumn>\r\n                        {listaSolicitacoes.map((solicitacao) => (\r\n                            <SolicitacaoContainer key={solicitacao.idSolicitacao}>\r\n                                {/* <InformacaoRow>\r\n                                    Código da Solicitação: {solicitacao.codigoSolicitacao} \r\n                                </InformacaoRow> */}\r\n                                <InformacaoRow>\r\n                                    Situação: {solicitacao.situacao} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Equipamentos: \r\n                                </InformacaoRow>\r\n                                {solicitacao.equipamentos.map((equipamento) =>\r\n                                    <InformacaoRow key={equipamento.idEquipamento}>\r\n                                        {formataDeEnum(equipamento.categoria)} - {equipamento.codigoEquipamento}\r\n                                    </InformacaoRow>   \r\n                                )} \r\n\r\n                            </SolicitacaoContainer>\r\n                        ))\r\n                        }\r\n                    </SolicitacoesColumn>\r\n                </Column>\r\n            </Row>\r\n            <Button onClick={handleOpen}>\r\n                            NOVO AGENDAMENTO\r\n            </Button>\r\n            <ModalSolicitacao handleClose={handleClose} open={open} />\r\n        </Container>\r\n    )\r\n}","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\contexts\\user.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\GeraTermoResponsabilidade\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\NotFound\\index.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":14,"column":31,"nodeType":"122","messageId":"123","endLine":14,"endColumn":51},{"ruleId":"124","severity":1,"message":"125","line":144,"column":46,"nodeType":"126","messageId":"127","endLine":144,"endColumn":48},{"ruleId":"128","severity":1,"message":"129","line":209,"column":12,"nodeType":"130","endLine":209,"endColumn":14,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":53,"column":12,"nodeType":"130","endLine":53,"endColumn":14,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"no-unused-vars","'setCodigoSolicitacao' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUsuarios'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'loadSolicitacoes'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [loadUsuarios]",{"range":"142","text":"143"},"Update the dependencies array to be: [loadSolicitacoes]",{"range":"144","text":"145"},[6781,6783],"[loadUsuarios]",[1495,1497],"[loadSolicitacoes]"]