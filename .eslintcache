[{"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\index.js":"1","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\reportWebVitals.js":"2","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\App.js":"3","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\index.js":"4","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\index.js":"5","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\styles.js":"6","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\services\\api.js":"7","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\index.js":"8","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\index.js":"9","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\styles.js":"10","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\styles.js":"11","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\index.js":"12","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\styles.js":"13","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\auth.routes.js":"14","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\infra.routes.js":"15","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\colaborador.routes.js":"16","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\index.js":"17","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\contexts\\user.js":"18","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\index.js":"19","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\styles.js":"20","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\index.js":"21","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\styles.js":"22","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\styles.js":"23"},{"size":463,"mtime":1610396101936,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":308,"mtime":1610972938197,"results":"27","hashOfConfig":"25"},{"size":1196,"mtime":1610896110789,"results":"28","hashOfConfig":"25"},{"size":7700,"mtime":1610954019638,"results":"29","hashOfConfig":"25"},{"size":3308,"mtime":1610953038495,"results":"30","hashOfConfig":"25"},{"size":122,"mtime":1610332418403,"results":"31","hashOfConfig":"25"},{"size":13290,"mtime":1610956702361,"results":"32","hashOfConfig":"25"},{"size":1449,"mtime":1610947930694,"results":"33","hashOfConfig":"25"},{"size":1180,"mtime":1610948477174,"results":"34","hashOfConfig":"25"},{"size":1414,"mtime":1610956421155,"results":"35","hashOfConfig":"25"},{"size":6982,"mtime":1610954027887,"results":"36","hashOfConfig":"25"},{"size":1949,"mtime":1610905813910,"results":"37","hashOfConfig":"25"},{"size":144,"mtime":1610895250209,"results":"38","hashOfConfig":"25"},{"size":675,"mtime":1610905261442,"results":"39","hashOfConfig":"25"},{"size":378,"mtime":1610894936795,"results":"40","hashOfConfig":"25"},{"size":3595,"mtime":1610958979520,"results":"41","hashOfConfig":"25"},{"size":1277,"mtime":1610897664302,"results":"42","hashOfConfig":"25"},{"size":1005,"mtime":1610956973622,"results":"43","hashOfConfig":"25"},{"size":817,"mtime":1610957783928,"results":"44","hashOfConfig":"25"},{"size":8418,"mtime":1610959536959,"results":"45","hashOfConfig":"25"},{"size":2389,"mtime":1610959590110,"results":"46","hashOfConfig":"25"},{"size":2040,"mtime":1610944683607,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"26n622",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\index.js",[],["101","102"],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\reportWebVitals.js",[],["103","104"],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\App.js",["105"],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Inicial\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\services\\api.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\index.js",["106","107","108"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Modal, TextField, Backdrop, Fade, MenuItem} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport api from '../../services/api';\r\nimport {ModalS, Paper, ButtonAdd, ButtonDelete, Button, ButtonOutline} from './styles'\r\nimport { UsuarioContext } from '../../contexts/user';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function ModalSolicitacao({handleClose, open}){\r\n    const [campos, setCampos] = useState([{ value: null }]);\r\n    const [todosUsuarios, setTodosUsuarios] = useState([]);\r\n    const [codigoSolicitacao, setCodigoSolicitacao] = useState('');\r\n    const [solicitante, setSolicitante] = useState();\r\n    const [listaEquipamentos, setListaEquipamentos] = useState([]);\r\n    const [listaDiasReservados, setListaDiasReservados] = useState([]);\r\n    const [equipamentoByCategoria, setEquipamentoByCategoria] = useState();\r\n    const [situacao, setSituacao] = useState('');\r\n    const [data, setData] = useState('');\r\n    const [hora, setHora] = useState('');\r\n    const [horaLivre, setHoraLivre] = useState(true);\r\n    const { user } = useContext(UsuarioContext);\r\n\r\n    const listaHorarios = [\r\n        \"09:00\",\r\n        \"10:00\",\r\n        \"11:00\",\r\n        \"13:00\",\r\n        \"14:00\",\r\n        \"15:00\",\r\n        \"16:00\",\r\n        \"17:00\"\r\n    ]\r\n\r\n    const listaCategorias = [\r\n        'Monitor',\r\n        'Cadeira'\r\n    ]\r\n\r\n    const handleAdicionaInput = () => {\r\n        const quantidade = [...campos];\r\n        quantidade.push({ value: null });\r\n        setCampos(quantidade);\r\n    }\r\n  \r\n    const handleRemoveInput = (i, equipamento) => {\r\n        const quantidade = [...campos];\r\n        quantidade.splice(i, 1);\r\n        setCampos(quantidade);\r\n        let name = equipamento;\r\n        setListaEquipamentos(listaEquipamentos.filter((equipamento)=>(equipamento !== name)));\r\n    }\r\n    \r\n    const handleSolicitacao = async (e) => {\r\n        e.preventDefault();\r\n\r\n        loadSolicitacaoByDataHora(data, hora);\r\n\r\n        if(user.admin === false) {\r\n            setSolicitante(user.idUsuario);\r\n            setSituacao('ANALISE');\r\n        } else {\r\n            setSituacao('AGENDADA');\r\n        }\r\n        \r\n        const params = { \r\n            solicitante: parseInt(solicitante),\r\n            situacao: situacao,\r\n            equipamentos: listaEquipamentos,\r\n            data: data,\r\n            hora: hora,\r\n            codigoSolicitacao: codigoSolicitacao\r\n        }\r\n        console.log(params);\r\n        \r\n        if (solicitante !== parseInt(solicitante)){\r\n            return alert(\"Adicione um solicitante\")\r\n        }\r\n        if (horaLivre === false){\r\n            return alert(\"Esse horário já está marcado\")\r\n        }\r\n        if (listaEquipamentos.length === 0){\r\n            return alert(\"Adicione um equipamento\")\r\n        }\r\n\r\n        try {\r\n            await api.post('solicitacao', params);\r\n            mapSetEquipamentoIndisponivel(listaEquipamentos);\r\n        } catch (error) {\r\n            alert(error.response.data);\r\n        } finally{\r\n            setSolicitante('');\r\n            setData('');\r\n            setHora('');\r\n            setListaEquipamentos([]);\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    const loadDiasReservados = async () => {\r\n        try{\r\n            const response = await api.get('diaReservado');\r\n            setListaDiasReservados(response.data);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const setEquipamentoIndisponivel = (equipamento) => {\r\n        api.put(`equipamento/setIndisponivel/${equipamento.idEquipamento}`)\r\n    return Promise.resolve('ok')\r\n    }\r\n      \r\n    const asyncSetEquipamentoIndisponivel = async (equipamento) => {\r\n        return setEquipamentoIndisponivel(equipamento)\r\n    }\r\n      \r\n    const mapSetEquipamentoIndisponivel = async (lista) => {\r\n        return Promise.all(lista.map(equipamento=> asyncSetEquipamentoIndisponivel(equipamento)))\r\n    }\r\n\r\n    const verificaDiaReservado = (dataEscolhida) => {\r\n        let isReservado = false;\r\n        loadDiasReservados();\r\n\r\n        listaDiasReservados.map(diaReservado => {\r\n            if (diaReservado.data === dataEscolhida) {\r\n                isReservado = true;\r\n            } \r\n        })  \r\n        return isReservado; \r\n    }\r\n\r\n    const loadSolicitacaoByDataHora = async (dataEscolhida, horaEscolhida)  => {\r\n        try {\r\n            const response = await api.get(`solicitacao/dataHora/${dataEscolhida}/${horaEscolhida}`);\r\n            setHoraLivre(false);\r\n            if(response.data === \"\"){\r\n                setHoraLivre(true);\r\n            } else {\r\n                alert(\"Esse horário já está marcado\");\r\n            }\r\n        } catch(error) {\r\n            alert(\"Não foi possível verificar a hora solicitada\")\r\n        }\r\n    }\r\n\r\n    const verificaData = (dataEscolhida) => {\r\n        loadDiasReservados();\r\n        if (dataEscolhida > getDataHoje() & verificaDiaReservado(dataEscolhida) === false) {\r\n            setData(dataEscolhida);\r\n        } else {\r\n            alert(\"Não é possível fazer um agendamento nesta data\");\r\n            setData(''); \r\n        }\r\n    }\r\n    \r\n    const getDataHoje = () => {\r\n        return new Date().toISOString().slice(0, 10);\r\n    }\r\n\r\n    const loadUsuarios = async () => {\r\n        try{\r\n            const response = await api.get('usuario');\r\n            setTodosUsuarios(response.data);\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const loadEquipamentoByCategoria = async (categoria) => {\r\n        \r\n        try{\r\n            const response = await api.get(`equipamento/categoria/${formataParaEnum(categoria)}`);\r\n            setListaEquipamentos(a => [...a, (response.data)]);\r\n            setEquipamentoByCategoria(response.data);\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Equipamento do tipo \"+categoria+\" em falta\")\r\n        }\r\n    }\r\n\r\n    const formataParaEnum = (item) => {\r\n        const semEspacos = item.replace(\" \",\"_\");\r\n        return semEspacos.toUpperCase();\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            loadUsuarios();\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <ModalS\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Paper>\r\n                        <Grid\r\n                            direction=\"row\"\r\n                            container\r\n                        >\r\n                        <TextField\r\n                            id=\"outlined-date\"\r\n                            label=\"Data\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            value={data}\r\n                            onChange={e => \r\n                                {verificaData(e.target.value)\r\n                            }}\r\n                         >\r\n                        </TextField>\r\n\r\n                        <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Código da Solicitação\"\r\n                            placeholder=\"Placeholder\"\r\n                            required\r\n                            multiline\r\n                            style={{width: \"190px\", marginLeft: 17, marginBottom: 15}}\r\n                            variant=\"outlined\"\r\n                            value={codigoSolicitacao}\r\n                            onChange={e => \r\n                                {setCodigoSolicitacao(e.target.value)\r\n                            }}\r\n                         >\r\n                        </TextField>\r\n                        </Grid>\r\n                        <Grid\r\n                            direction=\"row\"\r\n                            container\r\n                        >\r\n                        {user.admin &&\r\n                            <Autocomplete\r\n                                id=\"combo-box-demo\"\r\n                                required\r\n                                onChange={(event, newValue) => {\r\n                                    newValue !== null && setSolicitante(newValue.idUsuario)\r\n                                }}\r\n                                options={todosUsuarios}\r\n                                getOptionLabel={(usuario) => usuario.login}\r\n                                style={{ width: 300 }}\r\n                                renderInput={(params) => \r\n                                    <TextField \r\n                                        variant=\"outlined\" \r\n                                        required \r\n                                        style={{width: \"280px\", marginBottom: 15}} \r\n                                        {...params} \r\n                                        label=\"Solicitante\"\r\n                                        />\r\n                                }\r\n                            />\r\n                        }\r\n                        \r\n                        <TextField\r\n                            select\r\n                            required\r\n                            style={{width: \"100px\", marginBottom: 15}}\r\n                            variant=\"outlined\"\r\n                            id=\"standard-select-currency-native\"\r\n                            label=\"Hora\"\r\n                            value={hora}\r\n                            onChange={e => \r\n                                {setHora(e.target.value)\r\n                            }}\r\n                        >  \r\n                            {\r\n                                listaHorarios.map(horario => (\r\n                                    <MenuItem key={horario} value={horario}>{horario}</MenuItem>\r\n                                ))\r\n                            }\r\n                        </TextField>\r\n                        </Grid>\r\n\r\n                        {campos.map((campo, index) => {\r\n                            return (\r\n                            <div key={`${campo}-${index}`}>\r\n                                <TextField\r\n                                    id=\"outlined-textarea\"\r\n                                    style={{width: \"150px\", marginBottom: 15}}\r\n                                    label=\"Equipamento\"\r\n                                    select\r\n                                    placeholder=\"Placeholder\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    onChange={e => \r\n                                        {loadEquipamentoByCategoria(e.target.value)}}\r\n                                >{\r\n                                    listaCategorias.map(categoria => (\r\n                                        <MenuItem  \r\n                                            key={categoria}\r\n                                            value={categoria}\r\n                                        >\r\n                                            {categoria}\r\n                                        </MenuItem>\r\n                                    ))                                \r\n                                }\r\n                                </TextField>\r\n                                <ButtonDelete \r\n                                    type=\"button\" \r\n                                    onClick={() => handleRemoveInput(index, equipamentoByCategoria)}>\r\n                                x\r\n                                </ButtonDelete>\r\n                            </div>\r\n                            );\r\n                        })}\r\n\r\n                        <ButtonAdd\r\n                            type=\"button\" \r\n                            onClick={() => handleAdicionaInput()}\r\n                        >\r\n                            Adicionar equipamento\r\n                        </ButtonAdd>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            style={{ alignItems: \"center\", justifyContent: \"center\"}}\r\n                        >\r\n                            <Button\r\n                                onClick={e => handleSolicitacao(e)}\r\n                            >\r\n                                Adicionar\r\n                            </Button>\r\n                            <ButtonOutline\r\n                                onClick={handleClose}\r\n                            >\r\n                                Cancelar\r\n                            </ButtonOutline>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Fade>\r\n            </ModalS>\r\n        </div>\r\n    )\r\n}","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\Menu\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\components\\ModalSolicitacao\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\index.js",["109","110","111"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Button, SolicitacoesColumn, Row, SolicitacaoContainer, TituloSituacao, Column, InformacaoRow, Container, ButtonOutline} from './styles';\r\nimport api from '../../../services/api';\r\nimport Menu from '../../../components/Menu'\r\n\r\nexport default function HistoricoSolicitacoes() {\r\n    \r\n    const [listaRecusada, setListaRecusada] = useState([]);\r\n    const [listaInconclusa, setListaInconclusa] = useState([]);\r\n    const [listaConcluida, setListaConcluida] = useState([]);\r\n        \r\n    const listaMenu = [\r\n        {\r\n            nome: \"Inicio\",\r\n            rota: \"/\"\r\n        },\r\n        {\r\n            nome: \"Equipamentos\",\r\n            rota: \"/equipamentos\"\r\n        }\r\n    ]\r\n\r\n    const loadSolicitacoesBySituacao = async(situacao) => {\r\n        try{\r\n            const response = await api.get(`solicitacao/situacao/${situacao}`); \r\n            if(situacao === \"RECUSADA\"){\r\n                setListaRecusada(response.data)\r\n            };\r\n\r\n            if(situacao === \"INCONCLUSA\"){\r\n                setListaInconclusa(response.data)\r\n            };\r\n\r\n            if(situacao === \"CONCLUIDA\"){\r\n                setListaConcluida(response.data)\r\n            };\r\n\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    } \r\n\r\n    const formataDeEnum = (string) => {\r\n        return string.replace(/\\S*/g,  (word) => {\r\n            return word.charAt(0) + word.slice(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    const dataFormatada = (item) => {\r\n        var data = new Date(item),\r\n            dia  = data.getDate().toString(),\r\n            diaF = (dia.length === 1) ? '0'+dia : dia,\r\n            mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\r\n            mesF = (mes.length === 1) ? '0'+mes : mes,\r\n            anoF = data.getFullYear();\r\n        return diaF+\"/\"+mesF+\"/\"+anoF;\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            loadSolicitacoesBySituacao(\"RECUSADA\"); \r\n            loadSolicitacoesBySituacao(\"INCONCLUSA\");\r\n            loadSolicitacoesBySituacao(\"CONCLUIDA\");\r\n        }, []\r\n    )\r\n\r\n    return(\r\n        <Container>\r\n            <Menu listaMenu={listaMenu} pagina={\"Solicitações\"}/>   \r\n            <Row \r\n                direction=\"row\"\r\n                container\r\n            >\r\n                <Column>\r\n                    <TituloSituacao> Concluída </TituloSituacao>\r\n                    <SolicitacoesColumn>\r\n                        {listaConcluida.map((solicitacao) => (\r\n                            <SolicitacaoContainer key={solicitacao.idSolicitacao}>\r\n                                <InformacaoRow>\r\n                                    Código da Solicitação: {solicitacao.codigoSolicitacao} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Solicitante: {solicitacao.solicitante.login} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Data: {dataFormatada(solicitacao.data)}, {solicitacao.hora}\r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Equipamentos: \r\n                                </InformacaoRow>\r\n                                {solicitacao.equipamentos.map((equipamento) =>\r\n                                    <InformacaoRow>\r\n                                        {formataDeEnum(equipamento.categoria)} - {equipamento.codigoEquipamento}\r\n                                    </InformacaoRow>   \r\n                                )} \r\n                            </SolicitacaoContainer>\r\n                        ))\r\n                        }\r\n                    </SolicitacoesColumn>\r\n                </Column>\r\n\r\n                <Column>\r\n                    <TituloSituacao> Recusada </TituloSituacao>\r\n                    <SolicitacoesColumn>\r\n                        {listaRecusada.map((solicitacao) => (\r\n                            <SolicitacaoContainer key={solicitacao.idSolicitacao}>\r\n                                <InformacaoRow>\r\n                                    Código da Solicitação: {solicitacao.codigoSolicitacao} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Solicitante: {solicitacao.solicitante.login} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Data: {dataFormatada(solicitacao.data)}, {solicitacao.hora}\r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Equipamentos: \r\n                                </InformacaoRow>\r\n                                {solicitacao.equipamentos.map((equipamento) =>\r\n                                    <InformacaoRow>\r\n                                        {formataDeEnum(equipamento.categoria)} - {equipamento.codigoEquipamento}\r\n                                    </InformacaoRow>   \r\n                                )} \r\n                            </SolicitacaoContainer>\r\n                        ))\r\n                        }\r\n                    </SolicitacoesColumn>\r\n                </Column>\r\n                <Column>\r\n                    <TituloSituacao> Inconclusa </TituloSituacao>\r\n                    <SolicitacoesColumn>\r\n                        {listaInconclusa.map((solicitacao) => (\r\n                            <SolicitacaoContainer key={solicitacao.idSolicitacao}>\r\n                                <InformacaoRow>\r\n                                    Código da Solicitação: {solicitacao.codigoSolicitacao} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Solicitante: {solicitacao.solicitante.login} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Data: {dataFormatada(solicitacao.data)}, {solicitacao.hora}\r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Equipamentos: \r\n                                </InformacaoRow>\r\n                                {solicitacao.equipamentos.map((equipamento) =>\r\n                                    <InformacaoRow>\r\n                                        {formataDeEnum(equipamento.categoria)} - {equipamento.codigoEquipamento}\r\n                                    </InformacaoRow>   \r\n                                )} \r\n                            </SolicitacaoContainer>\r\n                        ))\r\n                        }\r\n                    </SolicitacoesColumn>\r\n                </Column>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n}","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\HistoricoSolicitacoes\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\auth.routes.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\infra.routes.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\routes\\colaborador.routes.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\index.js",["112","113","114","115"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport Menu from '../../components/Menu'\r\nimport { UsuarioContext } from '../../contexts/user';\r\nimport api from '../../services/api';\r\nimport Logo from '../../assets/logo_branca.svg';\r\nimport Banner from '../../assets/equipamentos.png';\r\nimport ModalSolicitacao from '../../components/ModalSolicitacao';\r\nimport { BannerContainer, Button, Header, SolicitacoesColumn, Row, SolicitacaoContainer, TituloSituacao, Column, InformacaoRow, Container, ButtonOutline} from './styles';\r\n\r\n\r\n\r\nexport default function Colaborador() {\r\n    const [open, setOpen] = useState(false);\r\n    const [listaSolicitacoes, setListaSolicitacoes] = useState([]);\r\n    const { user, signOut } = useContext(UsuarioContext);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const loadSolicitacoes = async() => {\r\n        try{\r\n            const response = await api.get(`solicitacao/solicitante/${user.idUsuario}`); \r\n            setListaSolicitacoes(response.data);\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n\r\n    const formataDeEnum = (string) => {\r\n        return string.replace(/\\S*/g,  (word) => {\r\n            return word.charAt(0) + word.slice(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            loadSolicitacoes();\r\n        }, []\r\n    )\r\n\r\n    return(\r\n        <Container>\r\n            <Header\r\n                direction=\"row\"\r\n                container\r\n            >\r\n                <img style={{width: \"22vw\"}} src={Logo}/>\r\n                <ButtonOutline onClick={()=> signOut()}>\r\n                    SAIR\r\n                </ButtonOutline>\r\n            </Header>\r\n            \r\n            <Row\r\n                direction=\"row\"\r\n                container\r\n            >\r\n                <BannerContainer>\r\n                    <img style={{height: \"62vh\" }} src={Banner}/>\r\n                </BannerContainer>\r\n\r\n                <Column>\r\n                    <TituloSituacao> Suas Solicitações </TituloSituacao>\r\n                    <SolicitacoesColumn>\r\n                        {listaSolicitacoes.map((solicitacao) => (\r\n                            <SolicitacaoContainer key={solicitacao.idSolicitacao}>\r\n                                <InformacaoRow>\r\n                                    Código da Solicitação: {solicitacao.codigoSolicitacao} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Situação: {solicitacao.situacao} \r\n                                </InformacaoRow>\r\n                                <InformacaoRow>\r\n                                    Equipamentos: \r\n                                </InformacaoRow>\r\n                                {solicitacao.equipamentos.map((equipamento) =>\r\n                                    <InformacaoRow>\r\n                                        {formataDeEnum(equipamento.categoria)} - {equipamento.codigoEquipamento}\r\n                                    </InformacaoRow>   \r\n                                )} \r\n\r\n                            </SolicitacaoContainer>\r\n                        ))\r\n                        }\r\n                    </SolicitacoesColumn>\r\n                </Column>\r\n            </Row>\r\n            <Button onClick={handleOpen}>\r\n                            NOVO AGENDAMENTO\r\n            </Button>\r\n            <ModalSolicitacao handleClose={handleClose} open={open} />\r\n        </Container>\r\n    )\r\n}","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\contexts\\user.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\index.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\LogIn\\styles.js",["116"],"import Styled from 'styled-components';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {TextField} from '@material-ui/core';\r\n\r\n\r\nexport const Container = Styled(Grid)`\r\n  background-color: #457b9d; \r\n  width: 100%;\r\n  height: 100vh;\r\n  vertical-align: middle;\r\n\r\n`\r\n\r\nexport const Button = Styled.button`\r\n    margin-left: 1vw;\r\n    width: 5vw;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    background-color: rgba(22, 80, 145, 0.4);\r\n    outline: none;\r\n    color: white;\r\n    min-width: 80px;\r\n    font-size: 11px;\r\n    cursor: pointer;\r\n`\r\n\r\n\r\n\r\nexport const Input = Styled.input`\r\n    width: 15vw;\r\n    height: 3vh;\r\n    &+input {\r\n      margin-left: 1vw;\r\n    }\r\n    margin-top: 40vh;\r\n    border-radius: 3px;\r\n    outline: none;\r\n    border: 1px solid black;\r\n    padding: 5px;  \r\n  `","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\index.js",["117","118","119"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport {TableBody, Table, TableContainer, Paper, TableCell, TableRow} from '@material-ui/core';\r\nimport {TextoTr, TextoTh, Container, Row, Button, TabelaRow, ButtonOutline, ButtonAdd, ButtonCancel} from './styles';\r\nimport {Modal, TextField, Backdrop, Fade, MenuItem} from '@material-ui/core';\r\nimport {ModalE, PaperModal} from './styles';\r\nimport Menu from '../../../components/Menu';\r\nimport api from '../../../services/api';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nexport default function Equipamentos() {\r\n\r\n    const [listaEquipamentos, setListaEquipamentos] = useState([])\r\n    const [codigoEquipamento, setCodigoEquipamento] = useState('');\r\n    const [categoria, setCategoria] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    const listaMenu = [\r\n        {\r\n            nome: \"Inicio\",\r\n            rota: \"/\"\r\n        },\r\n        {\r\n            nome: \"Histórico de Solicitações\",\r\n            rota: \"/historico-solicitacoes\"\r\n        }\r\n    ]\r\n\r\n    const listaCategorias = [\r\n        'Monitor',\r\n        'Cadeira'\r\n    ]\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const loadEquipamentos = async () => {\r\n        try{\r\n            const response = await api.get(`equipamento`); \r\n            setListaEquipamentos(response.data);\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n\r\n    const handleEquipamento = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const params = { \r\n            codigoEquipamento: codigoEquipamento,\r\n            categoria: formataParaEnum(categoria),\r\n            descricao: descricao,\r\n            disponivel: true\r\n        }\r\n\r\n        try {\r\n            await api.post('equipamento', params);\r\n        } catch (error) {\r\n            alert(\"Não foi possível cadastrar o equipamento\");\r\n        } finally{\r\n            setCategoria('');\r\n            setCodigoEquipamento('');\r\n            setDescricao('');\r\n            loadEquipamentos();\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    const setDisponibilidade = async (equipamento) => {\r\n\r\n        const params = {\r\n            disponivel: !equipamento.disponivel\r\n        }\r\n        try{\r\n            await api.put(`equipamento/${equipamento.idEquipamento}`, params);\r\n        } catch(error){\r\n            console.log(error);\r\n        } finally {\r\n            loadEquipamentos();\r\n        }\r\n        \r\n    }\r\n\r\n    const formataDeEnum = (string) => {\r\n        return string.replace(/\\S*/g,  (word) => {\r\n            return word.charAt(0) + word.slice(1).toLowerCase();\r\n        });\r\n    }\r\n\r\n    const formataParaEnum = (item) => {\r\n        const semEspacos = item.replace(\" \",\"_\");\r\n        return semEspacos.toUpperCase();\r\n    }\r\n    \r\n    useEffect(\r\n        () => {\r\n            loadEquipamentos();\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <Container>\r\n            <Menu listaMenu={listaMenu} pagina={\"Equipamentos\"}/>\r\n            <Row\r\n                container\r\n                direction=\"row\"\r\n            >\r\n            <Button \r\n                onClick={() => \r\n                    handleOpen()\r\n                }\r\n            >\r\n                Adicionar\r\n            </Button>\r\n            <TableContainer component={Paper} >\r\n                <Table  aria-label=\"Tabela Equipamentos\">\r\n                <thead>\r\n                    <tr>\r\n                    <TableCell align=\"center\"><TextoTh>Código do Equipamento</TextoTh></TableCell>\r\n                    <TableCell align=\"center\"><TextoTh>Categoria</TextoTh></TableCell>\r\n                    <TableCell align=\"center\"><TextoTh>Descrição</TextoTh></TableCell>\r\n                    <TableCell align=\"center\"><TextoTh>Disponível</TextoTh></TableCell>\r\n                    </tr>\r\n                    </thead>\r\n                <TableBody>\r\n                    {listaEquipamentos.map((equipamento) => (\r\n                    <TabelaRow key={equipamento.idEquipamento}>\r\n                        <TableCell component=\"th\" scope=\"equipamento\" align=\"center\"><TextoTr>{equipamento.codigoEquipamento}</TextoTr></TableCell>\r\n                        <TableCell align=\"center\"><TextoTr>{formataDeEnum(equipamento.categoria)}</TextoTr></TableCell>\r\n                        <TableCell align=\"center\" ><TextoTr>{equipamento.descricao}</TextoTr></TableCell>\r\n                        <TableCell align=\"center\" >\r\n                        {equipamento.disponivel === true ?\r\n                            <TextoTr>Sim</TextoTr>\r\n                            :\r\n                            <TextoTr>Não</TextoTr>\r\n                        }\r\n                            </TableCell>\r\n                        <TableCell align=\"center\" ><ButtonOutline onClick={() => {setDisponibilidade(equipamento)}} >Mudar disponibilidade</ButtonOutline></TableCell>\r\n\r\n                    </TabelaRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </Row>\r\n\r\n            <ModalE\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <PaperModal>\r\n                        <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Código do Equipamento\"\r\n                            placeholder=\"Código\"\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            value={codigoEquipamento}\r\n                            onChange={e => \r\n                                {setCodigoEquipamento(e.target.value)\r\n                            }}\r\n                         >\r\n                        </TextField>\r\n\r\n                        <TextField\r\n                            id=\"outlined-textarea\"\r\n                            label=\"Descrição\"\r\n                            placeholder=\"Descrição\"\r\n                            style={{ marginLeft: 10}}\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            value={descricao}\r\n                            onChange={e => \r\n                                {setDescricao(e.target.value)\r\n                            }}\r\n                         >\r\n                        </TextField>\r\n\r\n                        <TextField\r\n                            select\r\n                            variant=\"outlined\"\r\n                            id=\"standard-select-currency-native\"\r\n                            label=\"Categoria\"\r\n                            style={{width: '10vw', marginLeft: 10}}\r\n                            value={categoria}\r\n                            onChange={e => \r\n                                {setCategoria(e.target.value)\r\n                            }}\r\n                        >  \r\n                            {\r\n                                listaCategorias.map(categoria => (\r\n                                    <MenuItem key={categoria} value={categoria}>{categoria}</MenuItem>\r\n                                ))\r\n                            }\r\n                        </TextField>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            style={{marginTop: 20, justifyContent: \"center\"}}\r\n                        >\r\n                            <ButtonAdd\r\n                                onClick={e => handleEquipamento(e)}\r\n                            >\r\n                                Adicionar\r\n                            </ButtonAdd>\r\n                            <ButtonCancel\r\n                                onClick={handleClose}\r\n                            >\r\n                                Cancelar\r\n                            </ButtonCancel>\r\n                        </Grid>\r\n                    </PaperModal>\r\n                </Fade>\r\n            </ModalE>\r\n        </Container>\r\n      )\r\n\r\n}","C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Infra\\Equipamentos\\styles.js",[],"C:\\dsn.pack\\agenda-equipamento\\frontend\\agenda-equipamento\\src\\pages\\Colaborador\\styles.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":23},{"ruleId":"126","severity":1,"message":"130","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":20},{"ruleId":"126","severity":1,"message":"131","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":127,"column":46,"nodeType":"134","messageId":"135","endLine":127,"endColumn":48},{"ruleId":"126","severity":1,"message":"136","line":1,"column":38,"nodeType":"128","messageId":"129","endLine":1,"endColumn":49},{"ruleId":"126","severity":1,"message":"137","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":16},{"ruleId":"126","severity":1,"message":"138","line":2,"column":115,"nodeType":"128","messageId":"129","endLine":2,"endColumn":128},{"ruleId":"126","severity":1,"message":"139","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":12},{"ruleId":"140","severity":1,"message":"141","line":43,"column":12,"nodeType":"142","endLine":43,"endColumn":14,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":52,"column":17,"nodeType":"146","endLine":52,"endColumn":58},{"ruleId":"144","severity":1,"message":"145","line":63,"column":21,"nodeType":"146","endLine":63,"endColumn":66},{"ruleId":"126","severity":1,"message":"147","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"126","severity":1,"message":"148","line":1,"column":38,"nodeType":"128","messageId":"129","endLine":1,"endColumn":48},{"ruleId":"126","severity":1,"message":"149","line":2,"column":61,"nodeType":"128","messageId":"129","endLine":2,"endColumn":69},{"ruleId":"126","severity":1,"message":"131","line":4,"column":9,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Modal' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useCallback' is defined but never used.","'Button' is defined but never used.","'ButtonOutline' is defined but never used.","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadSolicitacoes'. Either include it or remove the dependency array.","ArrayExpression",["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'useContext' is defined but never used.","'TableRow' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [loadSolicitacoes]",{"range":"155","text":"156"},[1437,1439],"[loadSolicitacoes]"]